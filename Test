from itertools import chain, combinations

cards = [1, 2, 3, 4, 5, 6, 7, 8, 9]  # Cards
myTurn = True
my_hand = []
opponent_hand = []
winnings = [(1, 5, 9), (1, 6, 8), (2, 4, 9), (2, 5, 8), (2, 6, 7), (3, 4, 8), (3, 5, 7), (4, 5, 6), (1, 2, 4, 9),
            (1, 2, 5, 8), (1, 2, 5, 9), (1, 2, 6, 7), (1, 2, 6, 8), (1, 3, 4, 8), (1, 3, 5, 7), (1, 3, 5, 9),
            (1, 3, 6, 8), (1, 4, 5, 6), (1, 4, 5, 9), (1, 4, 6, 8), (1, 5, 6, 8), (1, 5, 6, 9), (1, 5, 7, 9),
            (1, 5, 8, 9), (1, 6, 7, 8), (1, 6, 8, 9), (2, 3, 4, 8), (2, 3, 4, 9), (2, 3, 5, 7), (2, 3, 5, 8),
            (2, 3, 6, 7), (2, 4, 5, 6), (2, 4, 5, 8),
            (2, 4, 5, 9), (2, 4, 6, 7), (2, 4, 6, 9), (2, 4, 7, 9), (2, 4, 8, 9), (2, 5, 6, 7), (2, 5, 6, 8),
            (2, 5, 7, 8), (2, 5, 8, 9), (2, 6, 7, 8),
            (2, 6, 7, 9), (3, 4, 5, 6), (3, 4, 5, 7), (3, 4, 5, 8), (3, 4, 6, 8), (3, 4, 7, 8), (3, 4, 8, 9),
            (3, 5, 6, 7), (3, 5, 7, 8), (3, 5, 7, 9),
            (4, 5, 6, 7), (4, 5, 6, 8), (4, 5, 6, 9)]

print((winnings[0])










# s = chain.from_iterable(combinations(cards, r) for r in range(3, 5))  # All the subset sets of cards in len of 3 and 4
# possible_winnings = list(s)
# for element in possible_winnings:
#     if len(element) == 3:
#         if element[0] + element[1] + element[2] == 15:
#             winnings.append(element)
#             continue
#
#     subsets = list(chain.from_iterable(combinations(element, r) for r in range(3, 4)))
#     for subset in subsets:
#         if subset[0] + subset[1] + subset[2] == 15:
#             winnings.append(element)
#

